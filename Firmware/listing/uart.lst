C51 COMPILER V7.50   UART                                                                  08/04/2014 23:19:50 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c BROWSE INCDIR(.\source) DEBUG OBJECTEXTEND PRINT(.\Listing\ua
                    -rt.lst) OBJECT(.\Output\uart.obj)

line level    source

   1          #include <uart.h>
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          #include <parameter.h>
   5          
   6          #define FOSC 11059200L      //System frequency
   7          #define BAUD 9600           //UART baudrate
   8          
   9          /*Define UART parity mode*/
  10          #define NONE_PARITY     0   //None parity
  11          #define ODD_PARITY      1   //Odd parity
  12          #define EVEN_PARITY     2   //Even parity
  13          #define MARK_PARITY     3   //Mark parity
  14          #define SPACE_PARITY    4   //Space parity
  15          
  16          #define PARITYBIT NONE_PARITY   //Testing even parity
  17          
  18          bit busy;
  19          bit uartReceiveOK = 0;
  20          
  21          BYTE uartBuffer[15] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  22          
  23          BYTE receiveSteps = 0;  // 0: 没有数据接收
  24                                                          // 1: 接收到5A
  25                                                          // 2：接收到A5
  26                                                          // 3：接收到数据长度
  27                                                          // 4: 接收数据
  28                                                          // 5：确定指令动作
  29          BYTE dataIndex = 0;
  30          BYTE dataLength = 0;
  31            
  32          void SendData(BYTE dat);
  33          void SendString(char *s);
  34          void ReceiveData(BYTE dat);
  35          void anyData();
  36          
  37          void uart_init()
  38          {
  39   1      #if (PARITYBIT == NONE_PARITY)
  40   1          SCON = 0x50;            //8-bit variable UART
  41   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  46   1      
  47   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  48   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  49   1          TR1 = 1;                //Timer1 start run
  50   1          ES = 1;                 //Enable UART interrupt
  51   1          EA = 1;                 //Open master interrupt switch
  52   1      
  53   1          //SendString("STC12C5A60S2\r\nUart2 Test !\r\n");
  54   1          //while(1);
C51 COMPILER V7.50   UART                                                                  08/04/2014 23:19:50 PAGE 2   

  55   1      }
  56          
  57          /*----------------------------
  58          UART interrupt service routine
  59          ----------------------------*/
  60          void Uart_Isr() interrupt 4 using 1
  61          {
  62   1          if (RI)
  63   1          {
  64   2              RI = 0;             //Clear receive interrupt flag
  65   2              //P0 = SBUF;          //P0 show UART data
  66   2                      ReceiveData(SBUF); 
  67   2          }
  68   1          if (TI)
  69   1          {
  70   2              TI = 0;             //Clear transmit interrupt flag
  71   2              busy = 0;           //Clear transmit busy flag
  72   2          }
  73   1      }
  74          
  75          /*----------------------------
  76          Send a byte data to UART
  77          Input: dat (data to be sent)
  78          Output:None
  79          ----------------------------*/
  80          void SendData(BYTE dat)
  81          {
  82   1          while (busy);           //Wait for the completion of the previous data is sent
  83   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  84   1          busy = 1;
  85   1          SBUF = ACC;             //Send data to UART buffer
  86   1      }
  87          
  88          /*----------------------------
  89          Send a string to UART
  90          Input: s (address of string)
  91          Output:None
  92          ----------------------------*/
  93          void SendString(char *s)
  94          {
  95   1          while (*s)              //Check the end of the string
  96   1          {
  97   2              SendData(*s++);     //Send current char and increment string ptr
  98   2          }
  99   1      }
 100          
 101          
 102          void SendDataToScreen(WORD address, WORD dat)
 103          {
 104   1              SendData(0x5A);
 105   1              SendData(0xA5);
 106   1              SendData(0x05);
 107   1              SendData(0x82);
 108   1              SendData(address>>8);
 109   1              SendData(address);
 110   1              SendData(dat>>8);
 111   1              SendData(dat);
 112   1      }
 113          
 114          void ReceiveData(BYTE dat)
 115          {
 116   1              // 0: 接收到5A
C51 COMPILER V7.50   UART                                                                  08/04/2014 23:19:50 PAGE 3   

 117   1              // 1：接收到A5
 118   1              // 2：接收到数据长度
 119   1              // 3: 接收数据
 120   1              // 4：确定指令动作
 121   1              switch(receiveSteps)
 122   1              {
 123   2                      case 0:
 124   2                              if(dat == 0x5A)
 125   2                              {
 126   3                                      receiveSteps ++;
 127   3                              }
 128   2                      break;
 129   2                      case 1:
 130   2                              if(dat == 0xA5)
 131   2                              {
 132   3                                      receiveSteps ++;
 133   3                              }
 134   2                              else
 135   2                              {
 136   3                                      receiveSteps = 0;
 137   3                              }
 138   2                      break;
 139   2                      case 2:
 140   2                              dataLength = dat;
 141   2                              dataIndex = 0;
 142   2                              receiveSteps ++;
 143   2                      break;
 144   2                      case 3:
 145   2                              uartBuffer[dataIndex] = dat;
 146   2                              dataIndex ++;
 147   2                              //TestOut = ~TestOut;
 148   2                              if(dataIndex >= dataLength)
 149   2                              {
 150   3                                      anyData();
 151   3                                      receiveSteps = 0;
 152   3                              }
 153   2                      break;
 154   2                      default:
 155   2                              _nop_();
 156   2                              receiveSteps = 0;
 157   2              }
 158   1      }
 159          
 160          void anyData()
 161          {
 162   1              WORD dat = ((uartBuffer[4]<<8) | uartBuffer[5]);
 163   1              TestOut = ~TestOut;
 164   1              if(uartBuffer[2] == 0x00)               //运行模式
 165   1              {
 166   2                      if(runMode == 0 || runMode == 2)
 167   2                      {
 168   3                              runMode = 0;
 169   3                      }
 170   2                      else
 171   2                      {
 172   3                              runMode = 1;
 173   3                      }
 174   2              }
 175   1              else if(uartBuffer[2] == 0x01)  ////电机状态
 176   1              {
 177   2                      if(montorMode)
 178   2                      {
C51 COMPILER V7.50   UART                                                                  08/04/2014 23:19:50 PAGE 4   

 179   3                              montorMode = 0;
 180   3                      }
 181   2                      else
 182   2                      {
 183   3                              montorMode = 1;
 184   3                      }
 185   2              }
 186   1              else if(uartBuffer[2] == 0x11)  
 187   1              {
 188   2                      intervalTimer1 = uartBuffer[5];
 189   2              }
 190   1              else if(uartBuffer[2] == 0x07)  //系统参数4
 191   1              {
 192   2      
 193   2              }
 194   1              else if(uartBuffer[2] == 0x09)  //系统参数5
 195   1              {
 196   2      
 197   2              }
 198   1              else if(uartBuffer[2] == 0x0B)  //板材参数_板长1
 199   1              {
 200   2      
 201   2              }
 202   1              else if(uartBuffer[2] == 0x0D)  //板材参数_块数1        
 203   1              {
 204   2      
 205   2              }
 206   1              else if(uartBuffer[2] == 0x0F)  //板材参数_板长2
 207   1              {
 208   2      
 209   2              }
 210   1              else if(uartBuffer[2] == 0x11)  //板材参数_块数2
 211   1              {
 212   2      
 213   2              }
 214   1              else if(uartBuffer[2] == 0x13)  //板材参数_板长3
 215   1              {
 216   2      
 217   2              }
 218   1              else if(uartBuffer[2] == 0x15)  //板材参数_块数3
 219   1              {
 220   2      
 221   2              }
 222   1              else if(uartBuffer[2] == 0x17)  //板材参数_板长4
 223   1              {
 224   2      
 225   2              }
 226   1              else if(uartBuffer[2] == 0x19)  //板材参数_块数4
 227   1              {
 228   2      
 229   2              }
 230   1              else if(uartBuffer[2] == 0x23)  //手动操作_前进
 231   1              {
 232   2      
 233   2              }
 234   1              else if(uartBuffer[2] == 0x24)  //手动操作_后退
 235   1              {
 236   2                      
 237   2              }
 238   1              else if(uartBuffer[2] == 0x25)  //手动操作_慢进
 239   1              {
 240   2                      
C51 COMPILER V7.50   UART                                                                  08/04/2014 23:19:50 PAGE 5   

 241   2              }
 242   1              else if(uartBuffer[2] == 0x26)  //手动操作_切断上
 243   1              {
 244   2                      
 245   2              }
 246   1              else if(uartBuffer[2] == 0x27)  //手动操作_切断下
 247   1              {
 248   2                      
 249   2              }
 250   1              else if(uartBuffer[2] == 0x28)  //运行画面_复位按钮
 251   1              {
 252   2                      
 253   2              }
 254   1              uartReceiveOK = 1;      
 255   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
