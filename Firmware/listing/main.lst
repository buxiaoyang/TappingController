C51 COMPILER V7.50   MAIN                                                                  08/04/2014 20:26:53 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing\main.lst) OBJECT(.\
                    -Output\main.obj)

line level    source

   1          /*------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ---------------------------------------------*/
   3          /* --- STC12C5Axx Series MCU UART (8-bit/9-bit)Demo ----------------*/
   4          /* --- Mobile: (86)13922805190 -------------------------------------*/
   5          /* --- Fax: 86-755-82905966 ----------------------------------------*/
   6          /* --- Tel: 86-755-82948412 ----------------------------------------*/
   7          /* --- Web: www.STCMCU.com -----------------------------------------*/
   8          /* If you want to use the program or the program referenced in the  */
   9          /* article, please specify in which data and procedures from STC    */
  10          /*------------------------------------------------------------------*/
  11          
  12          #include "reg51.h"
  13          #include "intrins.h"
  14          
  15          typedef unsigned char BYTE;
  16          typedef unsigned int WORD;
  17          
  18          #define FOSC 11059200L      //System frequency
  19          #define BAUD 9600           //UART baudrate
  20          
  21          /*Define UART parity mode*/
  22          #define NONE_PARITY     0   //None parity
  23          #define ODD_PARITY      1   //Odd parity
  24          #define EVEN_PARITY     2   //Even parity
  25          #define MARK_PARITY     3   //Mark parity
  26          #define SPACE_PARITY    4   //Space parity
  27          
  28          #define PARITYBIT NONE_PARITY   //Testing even parity
  29          
  30          bit busy;
  31          
  32          void SendData(BYTE dat);
  33          void SendString(char *s);
  34          
  35          void main()
  36          {
  37   1      #if (PARITYBIT == NONE_PARITY)
  38   1          SCON = 0x50;            //8-bit variable UART
  39   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  44   1      
  45   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  46   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  47   1          TR1 = 1;                //Timer1 start run
  48   1          ES = 1;                 //Enable UART interrupt
  49   1          EA = 1;                 //Open master interrupt switch
  50   1      
  51   1          SendString("STC12C5A60S2\r\nUart Test !\r\n");
  52   1          while(1);
  53   1      }
  54          
C51 COMPILER V7.50   MAIN                                                                  08/04/2014 20:26:53 PAGE 2   

  55          /*----------------------------
  56          UART interrupt service routine
  57          ----------------------------*/
  58          void Uart_Isr() interrupt 4 using 1
  59          {
  60   1          if (RI)
  61   1          {
  62   2              RI = 0;             //Clear receive interrupt flag
  63   2              P0 = SBUF;          //P0 show UART data
  64   2                      SendData(SBUF);
  65   2          }
  66   1          if (TI)
  67   1          {
  68   2              TI = 0;             //Clear transmit interrupt flag
  69   2              busy = 0;           //Clear transmit busy flag
  70   2          }
  71   1      }
  72          
  73          /*----------------------------
  74          Send a byte data to UART
  75          Input: dat (data to be sent)
  76          Output:None
  77          ----------------------------*/
  78          void SendData(BYTE dat)
  79          {
  80   1          while (busy);           //Wait for the completion of the previous data is sent
  81   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  82   1          if (P)                  //Set the parity bit according to P
  83   1          {
  84   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #endif
  89   2          }
  90   1          else
  91   1          {
  92   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #endif
  97   2          }
  98   1          busy = 1;
  99   1          SBUF = ACC;             //Send data to UART buffer
 100   1      }
 101          
 102          /*----------------------------
 103          Send a string to UART
 104          Input: s (address of string)
 105          Output:None
 106          ----------------------------*/
 107          void SendString(char *s)
 108          {
 109   1          while (*s)              //Check the end of the string
 110   1          {
 111   2              SendData(*s++);     //Send current char and increment string ptr
 112   2          }
 113   1      }
 114          


C51 COMPILER V7.50   MAIN                                                                  08/04/2014 20:26:53 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
